---

- name: Install Rstudio
  hosts: rstudio_server
  gather_facts: true
  become: true
  remote_user: "{{ local_ssh_remote_user }}"

  # THIS PLAYBOOK ASSUMES THE SERVER WHERE WE DEPLOY RSTUDIO HAS A PUBLIC IP AND
  # PORTS 80 AND 443 ARE WORLDWIDE ACCESSIBLE

  vars:

    apache_remove_default_vhost: true
    apache_remove_default_vhost_ssl: true
    apache_ignore_missing_ssl_certificate: false
    dehydrated_contact_email: no-reply@unibas.ch

    apache_global_vhost_settings: |

      Alias /.well-known/acme-challenge/ {{ dehydrated_wellknown_dir }}

      <Directory {{ dehydrated_wellknown_dir }} >
      Require all granted
      </Directory>

      ServerTokens Prod

    apache_vhosts:
      - servername: "{{ rstudio_public_domain }}"
        extra_parameters: |
          # redirect all traffic to https
          RewriteEngine On
          RewriteCond %{HTTPS} off
          RewriteCond %{REQUEST_URI} !^/.well-known/
          RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R,L]

    apache_vhosts_ssl:
      - servername: "{{ rstudio_public_domain }}"
        certificate_file: "{{ dehydrated_certs_dir }}/{{ rstudio_public_domain }}/fullchain.pem"
        certificate_key_file: "{{ dehydrated_certs_dir }}/{{ rstudio_public_domain }}/privkey.pem"
        certificate_chain_file: "{{ dehydrated_certs_dir }}/{{ rstudio_public_domain }}/fullchain.pem"
        extra_parameters: |

          ProxyRequests Off
          ProxyPreserveHost On

          <Proxy *>
              Order deny,allow
              Allow from all
          </Proxy>

          ProxyPass / http://localhost:8787/ retry=1
          ProxyPassReverse / http://localhost:8787/


  tasks:

    - name: Query the public ip info for rstudio server
      ansible.builtin.uri:
        url: https://ipinfo.io/json
      register: _public_ip_info

    - name: Set a variable with the public domain of the rstudio server (used to access Rstudio)
      ansible.builtin.set_fact:
        rstudio_public_domain: "{{ _public_ip_info.json.hostname }}"

    - name: Set a variable with the letsencrypt domains
      ansible.builtin.set_fact:
        dehydrated_domains:
          - "{{ rstudio_public_domain }}"

    - name: Install Rstudio
      ansible.builtin.import_role:
        name: pescobar.ansible_role_rstudio_server

    - name: Install and configure apache webserver (no ssl yet)
      ansible.builtin.import_role:
        name: wcm_io_devops.apache

    - name: Install dehydrated letsencrypt/acme client
      ansible.builtin.import_role:
        name: pescobar.dehydrated

    - name: Execute handlers so apache enables the .well-known folder and dehydrated requests the ssl certificates
      ansible.builtin.meta: flush_handlers

    - name: Install and configure apache webserver again (configure ssl vhosts)
      ansible.builtin.import_role:
        name: wcm_io_devops.apache

    - name: Print the Rstudio url
      ansible.builtin.debug:
        msg: "You can access Rstudio in https://{{ rstudio_public_domain }}"
