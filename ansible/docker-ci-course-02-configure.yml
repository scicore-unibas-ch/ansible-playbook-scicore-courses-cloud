---

- name: Configure machines for the Docker CI course
  hosts: docker_ci_course
  become: yes
  gather_facts: yes

  tasks:

    - name: Apply common setup
      ansible.builtin.import_tasks: tasks/common.yml

    - name: Configure sshd to allow password authentication
      ansible.builtin.import_role:
        name: willshersystems.sshd
      vars:
        sshd:
          PasswordAuthentication: yes

    - name: force all notified handlers to run at this point, not waiting for normal sync points
      ansible.builtin.meta: flush_handlers

    - name: Install docker
      ansible.builtin.import_role:
        name: geerlingguy.docker

    - name: Install gitlab-runner
      ansible.builtin.import_role:
        name: riemers.gitlab-runner

    - name: Add gitlab-runner user to docker group
      ansible.builtin.user:
        name: gitlab-runner
        groups: docker
        append: yes
      notify: restart_gitlab_runner

    - name: Add account for student (with sudo permission)
      ansible.builtin.import_role:
        name: robertdebock.users
      vars:
        users_user_list:
          - name: student
            password: "{{ local_student_default_password }}"
            sudo_options: "ALL=(ALL) NOPASSWD: ALL"

    - name: Add student user to docker group
      ansible.builtin.user:
        name: student
        groups: docker
        append: yes

    - name: Add the teacher's ssh public keys to the student account
      ansible.posix.authorized_key:
        user: student
        key: "{{ item }}"
      loop: "{{ local_teachers_ssh_keys }}"
      tags: ssh_keys_teachers


    - name: Customizations for RedHat/CentOS systems
      block:

        - name: RedHat | Add centos user to docker group
          ansible.builtin.user:
            name: centos
            groups: docker
            append: yes

        - name: RedHat | Add the teacher's ssh public keys to the centos account (grant sudo)
          ansible.posix.authorized_key:
            user: centos
            key: "{{ item }}"
          loop: "{{ local_teachers_ssh_keys }}"
          tags: ssh_keys_teachers

        - name: RedHat | Install python36-virtualenv
          ansible.builtin.yum:
            name: python36-virtualenv
            state: installed

        - name: RedHat | Set ansible var with the venv binary to use
          ansible.builtin.set_fact:
            _venv_binary: virtualenv-3

      when: ansible_os_family == 'RedHat'


    - name: Customizations for Debian/Ubuntu systems
      block:

        - name: Debian/Ubuntu | Add ubuntu user to docker group
          ansible.builtin.user:
            name: ubuntu
            groups: docker
            append: yes

        - name: Debian/Ubuntu | Add the teacher's ssh public keys to the ubuntu account (grant sudo)
          ansible.posix.authorized_key:
            user: ubuntu
            key: "{{ item }}"
          loop: "{{ local_teachers_ssh_keys }}"
          tags: ssh_keys_teachers

        - name: Debian/Ubuntu | Install python3-virtualenv
          ansible.builtin.apt:
            name: python3-virtualenv
            state: present

        - name: Debian/Ubuntu | Set ansible var with the venv binary to use
          ansible.builtin.set_fact:
            _venv_binary: virtualenv

      when: ansible_os_family == 'Debian'


    - name: Download the required code in the student's home folder
      block:

        - name: Clone the cathsm-server git repo to the student home folder
          ansible.builtin.git:
            repo: https://git.scicore.unibas.ch/bienert/cathsm-server-bc2conf2021.git
            dest: ~/cathsm-server
            version: master

        - name: Clone the cathsm-client git repo to the student home folder (hidden)
          ansible.builtin.git:
            repo: https://github.com/CATH-SWISSMODEL/cathsm-client.git
            dest: ~/.cathsm-client-src
            version: master

        - name: Create the venv for the cathsm-client with a recent pip version
          ansible.builtin.pip:
            name: pip>21.0
            virtualenv: ~/cathsm-client-venv
            virtualenv_command: "{{ _venv_binary }}"

        - name: Install requirements.txt provided in the cathsm-client repo in the venv
          ansible.builtin.pip:
            requirements: ~/.cathsm-client-src/requirements.txt
            virtualenv: ~/cathsm-client-venv
            virtualenv_command: "{{ _venv_binary }}"

        - name: Install the cathsm-client package in the venv
          ansible.builtin.pip:
            name: file:///home/student/.cathsm-client-src/
            virtualenv: ~/cathsm-client-venv
            virtualenv_command: "{{ _venv_binary }}"

        - name: Create config folder ~/.config/cath-swissmodel-api/ for the student
          ansible.builtin.file:
            path: ~/.config/cath-swissmodel-api/
            state: directory
            mode: 0755

        - name: Create ~/.config/cath-swissmodel-api/config.ini for the student
          ansible.builtin.copy:
            src: ~/cathsm-server/example_data/config.ini
            dest: ~/.config/cath-swissmodel-api/
            remote_src: true
            mode: 0644

      become: yes
      become_user: student

    - name: Deploy monitoring in RedHat/CentOS
      block:

        - name: Install InfluxDB
          ansible.builtin.import_role:
            name: influxdb

        - name: Install Grafana
          ansible.builtin.import_role:
            name: grafana

        - name: Install Telegraf
          ansible.builtin.import_role:
            name: telegraf

      when: ansible_os_family == 'RedHat'
